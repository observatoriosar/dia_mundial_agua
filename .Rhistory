dataOrd$selec = c(1:length(data[[varID]])) # selecionar variavel
dataOrd = dataOrd[dataOrd$selec <= 10 | dataOrd$selec >= (length(dataOrd$selec)-9) ,]
# executar visualizacao para os 10 maiores
plot_more = orderPlot(dataOrd[11:20,], varID, legendaVar)+
annotation_custom(osar, ymin=80, ymax=100)
plot_more
# salvar grafico
ggsave(paste0('10cidades_', cleanStr(legendaVar), '.png'),
plot_more,
path = 'resultados',
width = 7,
height = 5,
units = 'in')
return(plot_more)
}
dev02(snis_data17, 11, 'Perdas de Água no Abastecimento (%)')
### funcao para grafico ordenado
orderPlot = function(data, varID, legendaVar){
data$Município = factor(data$Município, levels = unique(data$Município[order(data[[varID]])]), ordered=TRUE)
# tratar label
data$label = paste0(data[[varID]], "%")
# produzir grafico
plot = ggplot(data = data, aes(x = as.numeric(`Município`), y = data[[varID]]))+
geom_bar(fill = "#008989", position = "dodge", stat="identity")+
scale_y_continuous(limits = c(0, 100))+
scale_x_continuous(labels = as.character(data$Município))+
geom_label(aes(label = data$label), size = 2.8)+
labs(x = '', y = legendaVar, title = paste("10 Cidades de PE com Maiores\n", legendaVar))+
tema_massa()+
coord_flip()
return(plot)
}
dev02 <- function(data, varID , legendaVar){
# ordenar e selecionar casos
dataOrd = data[order(data[[varID]]),]
dataOrd$selec = c(1:length(data[[varID]])) # selecionar variavel
dataOrd = dataOrd[dataOrd$selec <= 10 | dataOrd$selec >= (length(dataOrd$selec)-9) ,]
# executar visualizacao para os 10 maiores
plot_more = orderPlot(dataOrd[11:20,], varID, legendaVar)+
annotation_custom(osar, ymin=80, ymax=100)
plot_more
# salvar grafico
ggsave(paste0('10cidades_', cleanStr(legendaVar), '.png'),
plot_more,
path = 'resultados',
width = 7,
height = 5,
units = 'in')
return(plot_more)
}
dev02(snis_data17, 11, 'Perdas de Água no Abastecimento (%)')
data =snis_data17
varId = 11
legendaVar = 'test'
function (..., list = character(), package = NULL, lib.loc = NULL,
verbose = getOption("verbose"), envir = .GlobalEnv)
# ordenar e selecionar casos
dataOrd = data[order(data[[varID]]),]
dataOrd$selec = c(1:length(data[[varID]])) # selecionar variavel
# ordenar e selecionar casos
dataOrd = data[order(data[[varID]]),]
dataOrd$selec = c(1:length(data[[varID]])) # selecionar variavel
dataOrd = dataOrd[dataOrd$selec <= 10 | dataOrd$selec >= (length(dataOrd$selec)-9) ,]
data$Município = factor(data$Município, levels = unique(data$Município[order(data[[varID]])]), ordered=TRUE)
# tratar label
data$label = paste0(data[[varID]], "%")
# produzir grafico
plot = ggplot(data = data, aes(x = as.numeric(`Município`), y = data[[varID]]))+
geom_bar(fill = "#008989", position = "dodge", stat="identity")+
scale_y_continuous(limits = c(0, 100))+
scale_x_continuous(labels = as.character(data$Município))+
geom_label(aes(label = data$label), size = 2.8)+
labs(x = '', y = legendaVar, title = paste("10 Cidades de PE com Maiores\n", legendaVar))+
tema_massa()+
coord_flip()
plot
# produzir grafico
ggplot(data = data, aes(x = as.numeric(`Município`), y = data[[varID]]))+
geom_bar(fill = "#008989", position = "dodge", stat="identity")+
scale_y_continuous(limits = c(0, 100))+
scale_x_continuous(labels = as.character(data$Município))+
geom_label(aes(label = data$label), size = 2.8)+
labs(x = '', y = legendaVar, title = paste("10 Cidades de PE com Maiores\n", legendaVar))+
tema_massa()+
coord_flip()
# produzir grafico
ggplot(data = data, aes(x = as.numeric(data$`Município`), y = data[[varID]]))+
geom_bar(fill = "#008989", position = "dodge", stat="identity")+
scale_y_continuous(limits = c(0, 100))+
scale_x_continuous(labels = as.character(data$Município))+
geom_label(aes(label = data$label), size = 2.8)+
labs(x = '', y = legendaVar, title = paste("10 Cidades de PE com Maiores\n", legendaVar))+
tema_massa()+
coord_flip()
as.numeric(data$`Município`)
data =dataOrd
data$Município = factor(data$Município, levels = unique(data$Município[order(data[[varID]])]), ordered=TRUE)
# tratar label
data$label = paste0(data[[varID]], "%")
# produzir grafico
ggplot(data = data, aes(x = as.numeric(data$`Município`), y = data[[varID]]))+
geom_bar(fill = "#008989", position = "dodge", stat="identity")+
scale_y_continuous(limits = c(0, 100))+
scale_x_continuous(labels = as.character(data$Município))+
geom_label(aes(label = data$label), size = 2.8)+
labs(x = '', y = legendaVar, title = paste("10 Cidades de PE com Maiores\n", legendaVar))+
tema_massa()+
coord_flip()
as.numeric(data$`Município`)
# produzir grafico
ggplot(data = data, aes(x = as.numeric(data$`Município`), y = data[[varID]]))+
geom_bar(fill = "#008989", position = "dodge", stat="identity")+
scale_y_continuous(limits = c(0, 100))+
#scale_x_continuous(labels = as.character(data$Município))+
geom_label(aes(label = data$label), size = 2.8)+
labs(x = '', y = legendaVar, title = paste("10 Cidades de PE com Maiores\n", legendaVar))+
tema_massa()+
coord_flip()
# produzir grafico
ggplot(data = data, aes(x = as.numeric(data$`Município`), y = data[[varID]]))+
geom_bar(fill = "#008989", position = "dodge", stat="identity")+
scale_y_continuous(limits = c(0, 100))+
scale_x_discrete(labels = as.character(data$Município))+
geom_label(aes(label = data$label), size = 2.8)+
labs(x = '', y = legendaVar, title = paste("10 Cidades de PE com Maiores\n", legendaVar))+
tema_massa()+
coord_flip()
library(scales)
# produzir grafico
ggplot(data = data, aes(x = as.numeric(data$`Município`), y = data[[varID]]))+
geom_bar(fill = "#008989", position = "dodge", stat="identity")+
scale_y_continuous(limits = c(0, 100))+
scale_x_discrete(labels = as.character(data$Município))+
geom_label(aes(label = data$label), size = 2.8)+
labs(x = '', y = legendaVar, title = paste("10 Cidades de PE com Maiores\n", legendaVar))+
tema_massa()+
coord_flip()
### funcao para grafico ordenado
orderPlot = function(data, varID, legendaVar){
data$Município = factor(data$Município, levels = unique(data$Município[order(data[[varID]])]), ordered=TRUE)
# tratar label
data$label = paste0(data[[varID]], "%")
# produzir grafico
ggplot(data = data, aes(x = as.numeric(data$`Município`), y = data[[varID]]))+
geom_bar(fill = "#008989", position = "dodge", stat="identity")+
scale_y_continuous(limits = c(0, 100))+
scale_x_discrete(breaks=c(1:length(data$Município)), labels = as.character(data$Município))+
geom_label(aes(label = data$label), size = 2.8)+
labs(x = '', y = legendaVar, title = paste("10 Cidades de PE com Maiores\n", legendaVar))+
tema_massa()+
coord_flip()
return(plot)
}
dev02 <- function(data, varID , legendaVar){
# ordenar e selecionar casos
dataOrd = data[order(data[[varID]]),]
dataOrd$selec = c(1:length(data[[varID]])) # selecionar variavel
dataOrd = dataOrd[dataOrd$selec <= 10 | dataOrd$selec >= (length(dataOrd$selec)-9) ,]
# executar visualizacao para os 10 maiores
plot_more = orderPlot(dataOrd[11:20,], varID, legendaVar)+
annotation_custom(osar, ymin=80, ymax=100)
plot_more
# salvar grafico
ggsave(paste0('10cidades_', cleanStr(legendaVar), '.png'),
plot_more,
path = 'resultados',
width = 7,
height = 5,
units = 'in')
return(plot_more)
}
dev02(snis_data17, 11, 'Perdas de Água no Abastecimento (%)')
### funcao para grafico ordenado
orderPlot = function(data, varID, legendaVar){
data$Município = factor(data$Município, levels = unique(data$Município[order(data[[varID]])]), ordered=TRUE)
# tratar label
data$label = paste0(data[[varID]], "%")
# produzir grafico
ggplot(data = data, aes(x = as.numeric(data$Município), y = data[[varID]]))+
geom_bar(fill = "#008989", position = "dodge", stat="identity")+
scale_y_continuous(limits = c(0, 100))+
scale_x_discrete(breaks=c(1:length(data$Município)), labels = as.character(data$Município))+
geom_label(aes(label = data$label), size = 2.8)+
labs(x = '', y = legendaVar, title = paste("10 Cidades de PE com Maiores\n", legendaVar))+
tema_massa()+
coord_flip()
return(plot)
}
dev02 <- function(data, varID , legendaVar){
# ordenar e selecionar casos
dataOrd = data[order(data[[varID]]),]
dataOrd$selec = c(1:length(data[[varID]])) # selecionar variavel
dataOrd = dataOrd[dataOrd$selec <= 10 | dataOrd$selec >= (length(dataOrd$selec)-9) ,]
# executar visualizacao para os 10 maiores
plot_more = orderPlot(dataOrd[11:20,], varID, legendaVar)+
annotation_custom(osar, ymin=80, ymax=100)
plot_more
# salvar grafico
ggsave(paste0('10cidades_', cleanStr(legendaVar), '.png'),
plot_more,
path = 'resultados',
width = 7,
height = 5,
units = 'in')
return(plot_more)
}
dev02(snis_data17, 11, 'Perdas de Água no Abastecimento (%)')
### funcao para grafico ordenado
orderPlot = function(data, varID, legendaVar){
data$Município = factor(data$Município, levels = unique(data$Município[order(data[[varID]])]), ordered=TRUE)
# tratar label
data$label = paste0(data[[varID]], "%")
# produzir grafico
ggplot(data = data, aes(x = as.numeric(data$`Município`), y = data[[varID]]))+
geom_bar(fill = "#008989", position = "dodge", stat="identity")+
scale_y_continuous(limits = c(0, 100))+
scale_x_discrete(breaks=c(1:10), labels = as.character(data$Município))+
geom_label(aes(label = data$label), size = 2.8)+
labs(x = '', y = legendaVar, title = paste("10 Cidades de PE com Maiores\n", legendaVar))+
tema_massa()+
coord_flip()
return(plot)
}
dev02 <- function(data, varID , legendaVar){
# ordenar e selecionar casos
dataOrd = data[order(data[[varID]]),]
dataOrd$selec = c(1:length(data[[varID]])) # selecionar variavel
dataOrd = dataOrd[dataOrd$selec <= 10 | dataOrd$selec >= (length(dataOrd$selec)-9) ,]
# executar visualizacao para os 10 maiores
plot_more = orderPlot(dataOrd[11:20,], varID, legendaVar)+
annotation_custom(osar, ymin=80, ymax=100)
plot_more
# salvar grafico
ggsave(paste0('10cidades_', cleanStr(legendaVar), '.png'),
plot_more,
path = 'resultados',
width = 7,
height = 5,
units = 'in')
return(plot_more)
}
dev02(snis_data17, 11, 'Perdas de Água no Abastecimento (%)')
### funcao para grafico ordenado
orderPlot = function(data, varID, legendaVar){
data$Município = factor(data$Município, levels = unique(data$Município[order(data[[varID]])]), ordered=TRUE)
# tratar label
data$label = paste0(data[[varID]], "%")
# produzir grafico
ggplot(data = data, aes(x = as.numeric(data$`Município`), y = data[[varID]]))+
geom_bar(fill = "#008989", position = "dodge", stat="identity")+
scale_y_continuous(limits = c(0, 100))+
scale_x_discrete(labels = as.character(data$Município))+
geom_label(aes(label = data$label), size = 2.8)+
labs(x = '', y = legendaVar, title = paste("10 Cidades de PE com Maiores\n", legendaVar))+
tema_massa()+
coord_flip()
return(plot)
}
dev02(snis_data17, 11, 'Perdas de Água no Abastecimento (%)')
### funcao para grafico ordenado
orderPlot = function(data, varID, legendaVar){
data$Município = factor(data$Município, levels = unique(data$Município[order(data[[varID]])]), ordered=TRUE)
# tratar label
data$label = paste0(data[[varID]], "%")
# produzir grafico
ggplot(data = data, aes(x = as.numeric(data$`Município`), y = data[[varID]]))+
geom_bar(fill = "#008989", position = "dodge", stat="identity")+
scale_y_continuous(limits = c(0, 100))+
# scale_x_discrete(labels = as.character(data$Município))+
geom_label(aes(label = data$label), size = 2.8)+
labs(x = '', y = legendaVar, title = paste("10 Cidades de PE com Maiores\n", legendaVar))+
tema_massa()+
coord_flip()
return(plot)
}
View(snis_data17)
dev02(snis_data17, 11, 'Perdas de Água no Abastecimento (%)')
dev02 <- function(data, varID , legendaVar){
# ordenar e selecionar casos
dataOrd = data[order(data[[varID]]),]
dataOrd$selec = c(1:length(data[[varID]])) # selecionar variavel
dataOrd = dataOrd[dataOrd$selec <= 10 | dataOrd$selec >= (length(dataOrd$selec)-9) ,]
# executar visualizacao para os 10 maiores
plot_more = orderPlot(dataOrd[11:20,], varID, legendaVar)+
annotation_custom(osar, ymin=80, ymax=100)
plot_more
# salvar grafico
ggsave(paste0('10cidades_', cleanStr(legendaVar), '.png'),
plot_more,
path = 'resultados',
width = 7,
height = 5,
units = 'in')
return(plot_more)
}
dev02(snis_data17, 11, 'Perdas de Água no Abastecimento (%)')
data =snis_data17
varId = 11
legendaVar = 'test'
# ordenar e selecionar casos
dataOrd = data[order(data[[varID]]),]
dataOrd$selec = c(1:length(data[[varID]])) # selecionar variavel
dataOrd = dataOrd[dataOrd$selec <= 10 | dataOrd$selec >= (length(dataOrd$selec)-9) ,]
# executar visualizacao para os 10 maiores
plot_more = orderPlot(dataOrd[11:20,], varID, legendaVar)+
annotation_custom(osar, ymin=80, ymax=100)
plot_more
data = dataOrd
data$Município = factor(data$Município, levels = unique(data$Município[order(data[[varID]])]), ordered=TRUE)
# tratar label
data$label = paste0(data[[varID]], "%")
# produzir grafico
ggplot(data = data, aes(x = as.numeric(data$`Município`), y = data[[varID]]))+
geom_bar(fill = "#008989", position = "dodge", stat="identity")+
scale_y_continuous(limits = c(0, 100))+
# scale_x_discrete(labels = as.character(data$Município))+
geom_label(aes(label = data$label), size = 2.8)+
labs(x = '', y = legendaVar, title = paste("10 Cidades de PE com Maiores\n", legendaVar))+
tema_massa()+
coord_flip()
dev02 <- function(data, varID , legendaVar){
# ordenar e selecionar casos
dataOrd = data[order(data[[varID]]),]
dataOrd$selec = c(1:length(data[[varID]])) # selecionar variavel
dataOrd = dataOrd[dataOrd$selec <= 10 | dataOrd$selec >= (length(dataOrd$selec)-9) ,]
# executar visualizacao para os 10 maiores
plot_more = orderPlot(dataOrd[11:20,], varID, legendaVar)+
annotation_custom(osar, ymin=80, ymax=100)
# salvar grafico
ggsave(paste0('10cidades_', cleanStr(legendaVar), '.png'),
plot_more,
path = 'resultados',
width = 7,
height = 5,
units = 'in')
return(plot_more)
}
dev02(snis_data17, 11, 'Perdas de Água no Abastecimento (%)')
# ordenar e selecionar casos
dataOrd = data[order(data[[varID]]),]
dataOrd$selec = c(1:length(data[[varID]])) # selecionar variavel
dataOrd = dataOrd[dataOrd$selec <= 10 | dataOrd$selec >= (length(dataOrd$selec)-9) ,]
# executar visualizacao para os 10 maiores
plot_more = orderPlot(dataOrd[11:20,], varID, legendaVar)+
annotation_custom(osar, ymin=80, ymax=100)
data =snis_data17
varId = 11
legendaVar = 'test'
function (..., list = character(), package = NULL, lib.loc = NULL,
verbose = getOption("verbose"), envir = .GlobalEnv)
# ordenar e selecionar casos
dataOrd = data[order(data[[varID]]),]
dataOrd$selec = c(1:length(data[[varID]])) # selecionar variavel
# ordenar e selecionar casos
dataOrd = data[order(data[[varID]]),]
dataOrd$selec = c(1:length(data[[varID]])) # selecionar variavel
dataOrd = dataOrd[dataOrd$selec <= 10 | dataOrd$selec >= (length(dataOrd$selec)-9) ,]
data = dataOrd
data = dataOrd[11:20,]
data$Município = factor(data$Município, levels = unique(data$Município[order(data[[varID]])]), ordered=TRUE)
# tratar label
data$label = paste0(data[[varID]], "%")
# produzir grafico
ggplot(data = data, aes(x = as.numeric(data$`Município`), y = data[[varID]]))+
geom_bar(fill = "#008989", position = "dodge", stat="identity")+
scale_y_continuous(limits = c(0, 100))+
# scale_x_discrete(labels = as.character(data$Município))+
geom_label(aes(label = data$label), size = 2.8)+
labs(x = '', y = legendaVar, title = paste("10 Cidades de PE com Maiores\n", legendaVar))+
tema_massa()+
coord_flip()
### funcao para grafico ordenado
orderPlot = function(data, varID, legendaVar){
data$Município = factor(data$Município, levels = unique(data$Município[order(data[[varID]])]), ordered=TRUE)
# tratar label
data$label = paste0(data[[varID]], "%")
# produzir grafico
plot = ggplot(data = data, aes(x = as.numeric(data$`Município`), y = data[[varID]]))+
geom_bar(fill = "#008989", position = "dodge", stat="identity")+
scale_y_continuous(limits = c(0, 100))+
# scale_x_discrete(labels = as.character(data$Município))+
geom_label(aes(label = data$label), size = 2.8)+
labs(x = '', y = legendaVar, title = paste("10 Cidades de PE com Maiores\n", legendaVar))+
tema_massa()+
coord_flip()
return(plot)
}
dev02 <- function(data, varID , legendaVar){
# ordenar e selecionar casos
dataOrd = data[order(data[[varID]]),]
dataOrd$selec = c(1:length(data[[varID]])) # selecionar variavel
dataOrd = dataOrd[dataOrd$selec <= 10 | dataOrd$selec >= (length(dataOrd$selec)-9) ,]
# executar visualizacao para os 10 maiores
plot_more = orderPlot(dataOrd[11:20,], varID, legendaVar)+
annotation_custom(osar, ymin=80, ymax=100)
# salvar grafico
ggsave(paste0('10cidades_', cleanStr(legendaVar), '.png'),
plot_more,
path = 'resultados',
width = 7,
height = 5,
units = 'in')
return(plot_more)
}
dev02(snis_data17, 11, 'Perdas de Água no Abastecimento (%)')
### funcao para grafico ordenado
orderPlot = function(data, varID, legendaVar){
data$Município = factor(data$Município, levels = unique(data$Município[order(data[[varID]])]), ordered=TRUE)
# tratar label
data$label = paste0(data[[varID]], "%")
# produzir grafico
plot = ggplot(data = data, aes(x = as.numeric(data$`Município`), y = data[[varID]]))+
geom_bar(fill = "#008989", position = "dodge", stat="identity")+
scale_y_continuous(limits = c(0, 100))+
scale_x_discrete(breaks = c(1:10), labels = as.character(data$Município))+
geom_label(aes(label = data$label), size = 2.8)+
labs(x = '', y = legendaVar, title = paste("10 Cidades de PE com Maiores\n", legendaVar))+
tema_massa()+
coord_flip()
return(plot)
}
dev02 <- function(data, varID , legendaVar){
# ordenar e selecionar casos
dataOrd = data[order(data[[varID]]),]
dataOrd$selec = c(1:length(data[[varID]])) # selecionar variavel
dataOrd = dataOrd[dataOrd$selec <= 10 | dataOrd$selec >= (length(dataOrd$selec)-9) ,]
# executar visualizacao para os 10 maiores
plot_more = orderPlot(dataOrd[11:20,], varID, legendaVar)+
annotation_custom(osar, ymin=80, ymax=100)
# salvar grafico
ggsave(paste0('10cidades_', cleanStr(legendaVar), '.png'),
plot_more,
path = 'resultados',
width = 7,
height = 5,
units = 'in')
return(plot_more)
}
dev02(snis_data17, 11, 'Perdas de Água no Abastecimento (%)')
dev02(snis_data17, 11, 'Perdas de Água no Abastecimento (%)')
### funcao para grafico ordenado
orderPlot = function(data, varID, legendaVar){
data$Município = factor(data$Município, levels = unique(data$Município[order(data[[varID]])]), ordered=TRUE)
# tratar label
data$label = paste0(data[[varID]], "%")
# produzir grafico
plot = ggplot(data = data, aes(x = as.numeric(data$`Município`), y = data[[varID]]))+
geom_bar(fill = "#008989", position = "dodge", stat="identity")+
scale_y_continuous(limits = c(0, 100))+
scale_x_continuous(breaks = c(1:10), labels = as.character(data$Município))+
geom_label(aes(label = data$label), size = 2.8)+
labs(x = '', y = legendaVar, title = paste("10 Cidades de PE com Maiores\n", legendaVar))+
tema_massa()+
coord_flip()
return(plot)
}
View(snis_data17)
dev02(snis_data17, 11, 'Perdas de Água no Abastecimento (%)')
dev02 <- function(data, varID , legendaVar){
# ordenar e selecionar casos
dataOrd = data[order(data[[varID]]),]
dataOrd$selec = c(1:length(data[[varID]])) # selecionar variavel
dataOrd = dataOrd[dataOrd$selec <= 10 | dataOrd$selec >= (length(dataOrd$selec)-9) ,]
# executar visualizacao para os 10 maiores
plot_more = orderPlot(dataOrd[11:20,], varID, legendaVar)+
annotation_custom(osar, ymin=80, ymax=100, xmin = 1)
# salvar grafico
ggsave(paste0('10cidades_', cleanStr(legendaVar), '.png'),
plot_more,
path = 'resultados',
width = 7,
height = 5,
units = 'in')
return(plot_more)
}
dev02(snis_data17, 11, 'Perdas de Água no Abastecimento (%)')
dev02 <- function(data, varID , legendaVar){
# ordenar e selecionar casos
dataOrd = data[order(data[[varID]]),]
dataOrd$selec = c(1:length(data[[varID]])) # selecionar variavel
dataOrd = dataOrd[dataOrd$selec <= 10 | dataOrd$selec >= (length(dataOrd$selec)-9) ,]
# executar visualizacao para os 10 maiores
plot_more = orderPlot(dataOrd[11:20,], varID, legendaVar)+
annotation_custom(osar, ymin=80, ymax=100, xmax = 3)
# salvar grafico
ggsave(paste0('10cidades_', cleanStr(legendaVar), '.png'),
plot_more,
path = 'resultados',
width = 7,
height = 5,
units = 'in')
return(plot_more)
}
dev02(snis_data17, 11, 'Perdas de Água no Abastecimento (%)')
dev02 <- function(data, varID , legendaVar){
# ordenar e selecionar casos
dataOrd = data[order(data[[varID]]),]
dataOrd$selec = c(1:length(data[[varID]])) # selecionar variavel
dataOrd = dataOrd[dataOrd$selec <= 10 | dataOrd$selec >= (length(dataOrd$selec)-9) ,]
# executar visualizacao para os 10 maiores
plot_more = orderPlot(dataOrd[11:20,], varID, legendaVar)+
annotation_custom(osar, ymin=80, ymax=100, xmax = 3)
# salvar grafico
ggsave(paste0('10cidades_', cleanStr(legendaVar), '.png'),
plot_more,
path = 'resultados',
width = 7,
height = 4,
units = 'in')
return(plot_more)
}
dev02(snis_data17, 11, 'Perdas de Água no Abastecimento (%)')
